// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pathFile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pathFile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* Path_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Path_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pathFile_2eproto() {
  protobuf_AddDesc_pathFile_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pathFile.proto");
  GOOGLE_CHECK(file != NULL);
  Path_descriptor_ = file->message_type(0);
  static const int Path_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, posleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, velleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, accelleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, posright_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, velright_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, accelright_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, deltatime_),
  };
  Path_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Path_descriptor_,
      Path::default_instance_,
      Path_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Path));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pathFile_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Path_descriptor_, &Path::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pathFile_2eproto() {
  delete Path::default_instance_;
  delete Path_reflection_;
}

void protobuf_AddDesc_pathFile_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016pathFile.proto\022\005proto\"\206\001\n\004Path\022\017\n\007posL"
    "eft\030\001 \003(\001\022\017\n\007velLeft\030\002 \003(\001\022\021\n\taccelLeft\030"
    "\003 \003(\001\022\020\n\010posRight\030\004 \003(\001\022\020\n\010velRight\030\005 \003("
    "\001\022\022\n\naccelRight\030\006 \003(\001\022\021\n\tdeltaTime\030\007 \002(\001", 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pathFile.proto", &protobuf_RegisterTypes);
  Path::default_instance_ = new Path();
  Path::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pathFile_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pathFile_2eproto {
  StaticDescriptorInitializer_pathFile_2eproto() {
    protobuf_AddDesc_pathFile_2eproto();
  }
} static_descriptor_initializer_pathFile_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Path::kPosLeftFieldNumber;
const int Path::kVelLeftFieldNumber;
const int Path::kAccelLeftFieldNumber;
const int Path::kPosRightFieldNumber;
const int Path::kVelRightFieldNumber;
const int Path::kAccelRightFieldNumber;
const int Path::kDeltaTimeFieldNumber;
#endif  // !_MSC_VER

Path::Path()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Path)
}

void Path::InitAsDefaultInstance() {
}

Path::Path(const Path& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.Path)
}

void Path::SharedCtor() {
  _cached_size_ = 0;
  deltatime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:proto.Path)
  SharedDtor();
}

void Path::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Path_descriptor_;
}

const Path& Path::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pathFile_2eproto();
  return *default_instance_;
}

Path* Path::default_instance_ = NULL;

Path* Path::New() const {
  return new Path;
}

void Path::Clear() {
  deltatime_ = 0;
  posleft_.Clear();
  velleft_.Clear();
  accelleft_.Clear();
  posright_.Clear();
  velright_.Clear();
  accelright_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double posLeft = 1;
      case 1: {
        if (tag == 9) {
         parse_posLeft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_posleft())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_posleft())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_posLeft;
        if (input->ExpectTag(17)) goto parse_velLeft;
        break;
      }

      // repeated double velLeft = 2;
      case 2: {
        if (tag == 17) {
         parse_velLeft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_velleft())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_velleft())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_velLeft;
        if (input->ExpectTag(25)) goto parse_accelLeft;
        break;
      }

      // repeated double accelLeft = 3;
      case 3: {
        if (tag == 25) {
         parse_accelLeft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_accelleft())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_accelleft())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_accelLeft;
        if (input->ExpectTag(33)) goto parse_posRight;
        break;
      }

      // repeated double posRight = 4;
      case 4: {
        if (tag == 33) {
         parse_posRight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_posright())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_posright())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_posRight;
        if (input->ExpectTag(41)) goto parse_velRight;
        break;
      }

      // repeated double velRight = 5;
      case 5: {
        if (tag == 41) {
         parse_velRight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_velright())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_velright())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_velRight;
        if (input->ExpectTag(49)) goto parse_accelRight;
        break;
      }

      // repeated double accelRight = 6;
      case 6: {
        if (tag == 49) {
         parse_accelRight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49, input, this->mutable_accelright())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_accelright())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_accelRight;
        if (input->ExpectTag(57)) goto parse_deltaTime;
        break;
      }

      // required double deltaTime = 7;
      case 7: {
        if (tag == 57) {
         parse_deltaTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &deltatime_)));
          set_has_deltatime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Path)
  // repeated double posLeft = 1;
  for (int i = 0; i < this->posleft_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->posleft(i), output);
  }

  // repeated double velLeft = 2;
  for (int i = 0; i < this->velleft_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->velleft(i), output);
  }

  // repeated double accelLeft = 3;
  for (int i = 0; i < this->accelleft_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->accelleft(i), output);
  }

  // repeated double posRight = 4;
  for (int i = 0; i < this->posright_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->posright(i), output);
  }

  // repeated double velRight = 5;
  for (int i = 0; i < this->velright_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->velright(i), output);
  }

  // repeated double accelRight = 6;
  for (int i = 0; i < this->accelright_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->accelright(i), output);
  }

  // required double deltaTime = 7;
  if (has_deltatime()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->deltatime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Path)
}

::google::protobuf::uint8* Path::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Path)
  // repeated double posLeft = 1;
  for (int i = 0; i < this->posleft_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->posleft(i), target);
  }

  // repeated double velLeft = 2;
  for (int i = 0; i < this->velleft_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->velleft(i), target);
  }

  // repeated double accelLeft = 3;
  for (int i = 0; i < this->accelleft_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->accelleft(i), target);
  }

  // repeated double posRight = 4;
  for (int i = 0; i < this->posright_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->posright(i), target);
  }

  // repeated double velRight = 5;
  for (int i = 0; i < this->velright_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->velright(i), target);
  }

  // repeated double accelRight = 6;
  for (int i = 0; i < this->accelright_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(6, this->accelright(i), target);
  }

  // required double deltaTime = 7;
  if (has_deltatime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->deltatime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Path)
  return target;
}

int Path::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[6 / 32] & (0xffu << (6 % 32))) {
    // required double deltaTime = 7;
    if (has_deltatime()) {
      total_size += 1 + 8;
    }

  }
  // repeated double posLeft = 1;
  {
    int data_size = 0;
    data_size = 8 * this->posleft_size();
    total_size += 1 * this->posleft_size() + data_size;
  }

  // repeated double velLeft = 2;
  {
    int data_size = 0;
    data_size = 8 * this->velleft_size();
    total_size += 1 * this->velleft_size() + data_size;
  }

  // repeated double accelLeft = 3;
  {
    int data_size = 0;
    data_size = 8 * this->accelleft_size();
    total_size += 1 * this->accelleft_size() + data_size;
  }

  // repeated double posRight = 4;
  {
    int data_size = 0;
    data_size = 8 * this->posright_size();
    total_size += 1 * this->posright_size() + data_size;
  }

  // repeated double velRight = 5;
  {
    int data_size = 0;
    data_size = 8 * this->velright_size();
    total_size += 1 * this->velright_size() + data_size;
  }

  // repeated double accelRight = 6;
  {
    int data_size = 0;
    data_size = 8 * this->accelright_size();
    total_size += 1 * this->accelright_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Path* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Path*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
  GOOGLE_CHECK_NE(&from, this);
  posleft_.MergeFrom(from.posleft_);
  velleft_.MergeFrom(from.velleft_);
  accelleft_.MergeFrom(from.accelleft_);
  posright_.MergeFrom(from.posright_);
  velright_.MergeFrom(from.velright_);
  accelright_.MergeFrom(from.accelright_);
  if (from._has_bits_[6 / 32] & (0xffu << (6 % 32))) {
    if (from.has_deltatime()) {
      set_deltatime(from.deltatime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;

  return true;
}

void Path::Swap(Path* other) {
  if (other != this) {
    posleft_.Swap(&other->posleft_);
    velleft_.Swap(&other->velleft_);
    accelleft_.Swap(&other->accelleft_);
    posright_.Swap(&other->posright_);
    velright_.Swap(&other->velright_);
    accelright_.Swap(&other->accelright_);
    std::swap(deltatime_, other->deltatime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Path_descriptor_;
  metadata.reflection = Path_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
