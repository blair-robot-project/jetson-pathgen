// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pathRequestFile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pathRequestFile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* PathRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PathRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pathRequestFile_2eproto() {
  protobuf_AddDesc_pathRequestFile_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pathRequestFile.proto");
  GOOGLE_CHECK(file != NULL);
  PathRequest_descriptor_ = file->message_type(0);
  static const int PathRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, dt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, maxvel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, maxaccel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, maxjerk_),
  };
  PathRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PathRequest_descriptor_,
      PathRequest::default_instance_,
      PathRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PathRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PathRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pathRequestFile_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PathRequest_descriptor_, &PathRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pathRequestFile_2eproto() {
  delete PathRequest::default_instance_;
  delete PathRequest_reflection_;
}

void protobuf_AddDesc_pathRequestFile_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025pathRequestFile.proto\022\005proto\"q\n\013PathRe"
    "quest\022\t\n\001x\030\001 \003(\001\022\t\n\001y\030\002 \003(\001\022\r\n\005theta\030\003 \003"
    "(\001\022\n\n\002dt\030\004 \002(\005\022\016\n\006maxVel\030\005 \002(\001\022\020\n\010maxAcc"
    "el\030\006 \002(\001\022\017\n\007maxJerk\030\007 \002(\001", 145);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pathRequestFile.proto", &protobuf_RegisterTypes);
  PathRequest::default_instance_ = new PathRequest();
  PathRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pathRequestFile_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pathRequestFile_2eproto {
  StaticDescriptorInitializer_pathRequestFile_2eproto() {
    protobuf_AddDesc_pathRequestFile_2eproto();
  }
} static_descriptor_initializer_pathRequestFile_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PathRequest::kXFieldNumber;
const int PathRequest::kYFieldNumber;
const int PathRequest::kThetaFieldNumber;
const int PathRequest::kDtFieldNumber;
const int PathRequest::kMaxVelFieldNumber;
const int PathRequest::kMaxAccelFieldNumber;
const int PathRequest::kMaxJerkFieldNumber;
#endif  // !_MSC_VER

PathRequest::PathRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PathRequest)
}

void PathRequest::InitAsDefaultInstance() {
}

PathRequest::PathRequest(const PathRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PathRequest)
}

void PathRequest::SharedCtor() {
  _cached_size_ = 0;
  dt_ = 0;
  maxvel_ = 0;
  maxaccel_ = 0;
  maxjerk_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PathRequest::~PathRequest() {
  // @@protoc_insertion_point(destructor:proto.PathRequest)
  SharedDtor();
}

void PathRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PathRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PathRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PathRequest_descriptor_;
}

const PathRequest& PathRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pathRequestFile_2eproto();
  return *default_instance_;
}

PathRequest* PathRequest::default_instance_ = NULL;

PathRequest* PathRequest::New() const {
  return new PathRequest;
}

void PathRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PathRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(maxvel_, dt_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  x_.Clear();
  y_.Clear();
  theta_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PathRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PathRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double x = 1;
      case 1: {
        if (tag == 9) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_x())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_x;
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // repeated double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_y())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        if (input->ExpectTag(25)) goto parse_theta;
        break;
      }

      // repeated double theta = 3;
      case 3: {
        if (tag == 25) {
         parse_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_theta())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_theta())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_theta;
        if (input->ExpectTag(32)) goto parse_dt;
        break;
      }

      // required int32 dt = 4;
      case 4: {
        if (tag == 32) {
         parse_dt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dt_)));
          set_has_dt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_maxVel;
        break;
      }

      // required double maxVel = 5;
      case 5: {
        if (tag == 41) {
         parse_maxVel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxvel_)));
          set_has_maxvel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_maxAccel;
        break;
      }

      // required double maxAccel = 6;
      case 6: {
        if (tag == 49) {
         parse_maxAccel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxaccel_)));
          set_has_maxaccel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_maxJerk;
        break;
      }

      // required double maxJerk = 7;
      case 7: {
        if (tag == 57) {
         parse_maxJerk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxjerk_)));
          set_has_maxjerk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PathRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PathRequest)
  return false;
#undef DO_
}

void PathRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PathRequest)
  // repeated double x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->x(i), output);
  }

  // repeated double y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->y(i), output);
  }

  // repeated double theta = 3;
  for (int i = 0; i < this->theta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->theta(i), output);
  }

  // required int32 dt = 4;
  if (has_dt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dt(), output);
  }

  // required double maxVel = 5;
  if (has_maxvel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->maxvel(), output);
  }

  // required double maxAccel = 6;
  if (has_maxaccel()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->maxaccel(), output);
  }

  // required double maxJerk = 7;
  if (has_maxjerk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->maxjerk(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PathRequest)
}

::google::protobuf::uint8* PathRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.PathRequest)
  // repeated double x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->x(i), target);
  }

  // repeated double y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->y(i), target);
  }

  // repeated double theta = 3;
  for (int i = 0; i < this->theta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->theta(i), target);
  }

  // required int32 dt = 4;
  if (has_dt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dt(), target);
  }

  // required double maxVel = 5;
  if (has_maxvel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->maxvel(), target);
  }

  // required double maxAccel = 6;
  if (has_maxaccel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->maxaccel(), target);
  }

  // required double maxJerk = 7;
  if (has_maxjerk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->maxjerk(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PathRequest)
  return target;
}

int PathRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // required int32 dt = 4;
    if (has_dt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dt());
    }

    // required double maxVel = 5;
    if (has_maxvel()) {
      total_size += 1 + 8;
    }

    // required double maxAccel = 6;
    if (has_maxaccel()) {
      total_size += 1 + 8;
    }

    // required double maxJerk = 7;
    if (has_maxjerk()) {
      total_size += 1 + 8;
    }

  }
  // repeated double x = 1;
  {
    int data_size = 0;
    data_size = 8 * this->x_size();
    total_size += 1 * this->x_size() + data_size;
  }

  // repeated double y = 2;
  {
    int data_size = 0;
    data_size = 8 * this->y_size();
    total_size += 1 * this->y_size() + data_size;
  }

  // repeated double theta = 3;
  {
    int data_size = 0;
    data_size = 8 * this->theta_size();
    total_size += 1 * this->theta_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PathRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PathRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PathRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PathRequest::MergeFrom(const PathRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  theta_.MergeFrom(from.theta_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_dt()) {
      set_dt(from.dt());
    }
    if (from.has_maxvel()) {
      set_maxvel(from.maxvel());
    }
    if (from.has_maxaccel()) {
      set_maxaccel(from.maxaccel());
    }
    if (from.has_maxjerk()) {
      set_maxjerk(from.maxjerk());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PathRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathRequest::CopyFrom(const PathRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000078) != 0x00000078) return false;

  return true;
}

void PathRequest::Swap(PathRequest* other) {
  if (other != this) {
    x_.Swap(&other->x_);
    y_.Swap(&other->y_);
    theta_.Swap(&other->theta_);
    std::swap(dt_, other->dt_);
    std::swap(maxvel_, other->maxvel_);
    std::swap(maxaccel_, other->maxaccel_);
    std::swap(maxjerk_, other->maxjerk_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PathRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PathRequest_descriptor_;
  metadata.reflection = PathRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
